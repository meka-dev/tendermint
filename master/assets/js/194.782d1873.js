(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{768:function(e,t,s){"use strict";s.r(t);var o=s(1),i=Object(o.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"proposer-based-timestamps-pbts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proposer-based-timestamps-pbts"}},[e._v("#")]),e._v(" Proposer-Based Timestamps (PBTS)")]),e._v(" "),s("p",[e._v("This section describes a version of the Tendermint consensus protocol\nthat uses proposer-based timestamps.")]),e._v(" "),s("h2",{attrs:{id:"context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[e._v("#")]),e._v(" Context")]),e._v(" "),s("p",[e._v("Tendermint provides a deterministic, Byzantine fault-tolerant, source of time,\ndefined by the "),s("code",[e._v("Time")]),e._v(" field present in the headers of committed blocks.")]),e._v(" "),s("p",[e._v("In the current consensus implementation, the timestamp of a block is\ncomputed by the "),s("a",{attrs:{href:"https://github.com/tendermint/tendermint/blob/master/spec/consensus/bft-time.md",target:"_blank",rel:"noopener noreferrer"}},[s("code",[e._v("BFTTime")]),s("OutboundLink")],1),e._v(" algorithm:")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Validators include a timestamp in the "),s("code",[e._v("Precommit")]),e._v(" messages they broadcast.\nTimestamps are retrieved from the validators' local clocks,\nwith the only restriction that they must be "),s("strong",[e._v("monotonic")]),e._v(":")]),e._v(" "),s("ul",[s("li",[e._v("The timestamp of a "),s("code",[e._v("Precommit")]),e._v(" message voting for a block\ncannot be earlier than the "),s("code",[e._v("Time")]),e._v(" field of that block;")])])]),e._v(" "),s("li",[s("p",[e._v("The timestamp of a block is deterministically computed from the timestamps of\na set of "),s("code",[e._v("Precommit")]),e._v(" messages that certify the commit of the previous block.\nThis certificate, a set of "),s("code",[e._v("Precommit")]),e._v(" messages from a round of the previous height,\nis selected by the block's proposer and stored in the "),s("code",[e._v("Commit")]),e._v(" field of the block:")]),e._v(" "),s("ul",[s("li",[e._v("The block timestamp is the "),s("em",[e._v("median")]),e._v(" of the timestamps of the "),s("code",[e._v("Precommit")]),e._v(" messages\nincluded in the "),s("code",[e._v("Commit")]),e._v(" field, weighted by their voting power.\nBlock timestamps are "),s("strong",[e._v("monotonic")]),e._v(" because\ntimestamps of valid "),s("code",[e._v("Precommit")]),e._v(" messages are monotonic;")])])])]),e._v(" "),s("p",[e._v("Assuming that the voting power controlled by Byzantine validators is bounded by "),s("code",[e._v("f")]),e._v(",\nthe cumulative voting power of any valid "),s("code",[e._v("Commit")]),e._v(" set must be at least "),s("code",[e._v("2f+1")]),e._v(".\nAs a result, the timestamp computed by "),s("code",[e._v("BFTTime")]),e._v(" is not influenced by Byzantine validators,\nas the weighted median of "),s("code",[e._v("Commit")]),e._v(" timestamps comes from the clock of a non-faulty validator.")]),e._v(" "),s("p",[e._v("Tendermint does not make any assumptions regarding the clocks of (correct) validators,\nas block timestamps have no impact in the consensus protocol.\nHowever, the "),s("code",[e._v("Time")]),e._v(" field of committed blocks is used by other components of Tendermint,\nsuch as IBC, the evidence, staking, and slashing modules.\nAnd it is used based on the common belief that block timestamps\nshould bear some resemblance to real time, which is "),s("strong",[e._v("not guaranteed")]),e._v(".")]),e._v(" "),s("p",[e._v("A more comprehensive discussion of the limitations of "),s("code",[e._v("BFTTime")]),e._v("\ncan be found in the "),s("RouterLink",{attrs:{to:"/spec/consensus/proposer-based-timestamp/v1/pbts_001_draft.html"}},[e._v("first draft")]),e._v(' of this proposal.\nOf particular interest is to possibility of having validators equipped with "faulty" clocks,\nnot fairly accurate with real time, that control more than '),s("code",[e._v("f")]),e._v(" voting power,\nplus the proposer's flexibility when selecting a "),s("code",[e._v("Commit")]),e._v(" set,\nand thus determining the timestamp for a block.")],1),e._v(" "),s("h2",{attrs:{id:"proposal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proposal"}},[e._v("#")]),e._v(" Proposal")]),e._v(" "),s("p",[e._v("In the proposed solution, the timestamp of a block is assigned by its\nproposer, according with its local clock.\nIn other words, the proposer of a block also "),s("em",[e._v("proposes")]),e._v(" a timestamp for the block.\nValidators can accept or reject a proposed block.\nA block is only accepted if its timestamp is acceptable.\nA proposed timestamp is acceptable if it is "),s("em",[e._v("received")]),e._v(" within a certain time window,\ndetermined by synchronous parameters.")]),e._v(" "),s("p",[e._v("PBTS therefore augments the system model considered by Tendermint with "),s("em",[e._v("synchronous assumptions")]),e._v(":")]),e._v(" "),s("ul",[s("li",[s("p",[s("strong",[e._v("Synchronized clocks")]),e._v(": simultaneous clock reads at any two correct validators\ndiffer by at most "),s("code",[e._v("PRECISION")]),e._v(";")])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("Bounded message delays")]),e._v(": the end-to-end delay for delivering a message to all correct validators\nis bounded by "),s("code",[e._v("MSGDELAY")]),e._v(".\nThis assumption is restricted to "),s("code",[e._v("Proposal")]),e._v(" messages, broadcast by proposers.")])])]),e._v(" "),s("p",[s("code",[e._v("PRECISION")]),e._v(" and "),s("code",[e._v("MSGDELAY")]),e._v(" are consensus parameters, shared by all validators,\nthat define whether the timestamp of a block is acceptable.\nLet "),s("code",[e._v("t")]),e._v(" be the time, read from its local clock, at which a validator\nreceives, for the first time, a proposal with timestamp "),s("code",[e._v("ts")]),e._v(":")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("[Time-Validity]")]),e._v(" The proposed timestamp "),s("code",[e._v("ts")]),e._v(" received at local time "),s("code",[e._v("t")]),e._v("\nis accepted if it satisfies the "),s("strong",[e._v("timely")]),e._v(" predicate:\n"),s("blockquote",[s("p",[s("code",[e._v("ts - PRECISION <= t <= ts + MSGDELAY + PRECISION")])])])])]),e._v(" "),s("p",[e._v("The left inequality of the "),s("em",[e._v("timely")]),e._v(" predicate establishes that proposed timestamps\nshould be in the past, when adjusted by the clocks "),s("code",[e._v("PRECISION")]),e._v(".\nThe right inequality of the "),s("em",[e._v("timely")]),e._v(" predicate establishes that proposed timestamps\nshould not be too much in the past, more precisely, not more than "),s("code",[e._v("MSGDELAY")]),e._v(" in the past,\nwhen adjusted by the clocks "),s("code",[e._v("PRECISION")]),e._v(".")]),e._v(" "),s("p",[e._v("A more detailed and formalized description is available in the\n"),s("RouterLink",{attrs:{to:"/spec/consensus/proposer-based-timestamp/pbts-sysmodel_002_draft.html"}},[e._v("System Model and Properties")]),e._v(" document")],1),e._v(" "),s("h2",{attrs:{id:"implementation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#implementation"}},[e._v("#")]),e._v(" Implementation")]),e._v(" "),s("p",[e._v("The implementation of PBTS requires some changes in Tendermint consensus algorithm,\nsummarized below:")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("A proposer timestamps a block with the current time, read from its local clock.\nThe block's timestamp represents the time at which it was assembled\n(after the "),s("code",[e._v("getValue()")]),e._v(" call in line 18 of the "),s("a",{attrs:{href:"https://arxiv.org/pdf/1807.04938.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("arXiv"),s("OutboundLink")],1),e._v(" algorithm):")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Block timestamps are definitive, meaning that the original timestamp\nis retained when a block is re-proposed (line 16);")])]),e._v(" "),s("li",[s("p",[e._v("To preserve monotonicity, a proposer might need to wait until its clock\nreads a time greater than the timestamp of the previous block;")])])])]),e._v(" "),s("li",[s("p",[e._v("A validator only prevotes for "),s("em",[e._v("timely")]),e._v(" blocks,\nthat is, blocks whose timestamps are considered "),s("em",[e._v("timely")]),e._v(" (compared to the original Tendermint consensus, a check is added to line 23).\nIf the block proposed in a round is considered "),s("em",[e._v("untimely")]),e._v(",\nthe validator prevotes "),s("code",[e._v("nil")]),e._v(" (line 26):")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Validators register the time at which they received "),s("code",[e._v("Proposal")]),e._v(" messages,\nin order to evaluate the "),s("em",[e._v("timely")]),e._v(" predicate;")])]),e._v(" "),s("li",[s("p",[e._v("Blocks that are re-proposed because they received "),s("code",[e._v("2f+1 Prevotes")]),e._v("\nin a previous round (line 28) are not subject to the "),s("em",[e._v("timely")]),e._v(" predicate,\nas they have already been evaluated as "),s("em",[e._v("timely")]),e._v(" at a previous round.")])])])])]),e._v(" "),s("p",[e._v("The more complex change proposed regards blocks that can be re-proposed in multiple rounds.\nThe current solution improves the "),s("RouterLink",{attrs:{to:"/spec/consensus/proposer-based-timestamp/v1/pbts-algorithm_001_draft.html"}},[e._v("first version of the specification")]),e._v(" (that never had been implemented)\nby simplifying the way this situation is handled,\nfrom a recursive reasoning regarding valid blocks that are re-proposed.")],1),e._v(" "),s("p",[e._v("The full solution is detailed and formalized in the "),s("RouterLink",{attrs:{to:"/spec/consensus/proposer-based-timestamp/pbts-algorithm_002_draft.html"}},[e._v("Protocol Specification")]),e._v(" document.")],1),e._v(" "),s("h2",{attrs:{id:"further-details"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#further-details"}},[e._v("#")]),e._v(" Further details")]),e._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/spec/consensus/proposer-based-timestamp/pbts-sysmodel_002_draft.html"}},[e._v("System Model and Properties")])],1),e._v(" "),s("li",[s("RouterLink",{attrs:{to:"/spec/consensus/proposer-based-timestamp/pbts-algorithm_002_draft.html"}},[e._v("Protocol Specification")])],1),e._v(" "),s("li",[s("a",{attrs:{href:"./tla/TendermintPBT_001_draft.tla"}},[e._v("TLA+ Specification")]),e._v(" (first draft, not updated)")])]),e._v(" "),s("h3",{attrs:{id:"open-issues"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#open-issues"}},[e._v("#")]),e._v(" Open issues")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/tendermint/spec/issues/355",target:"_blank",rel:"noopener noreferrer"}},[e._v("PBTS: evidence #355"),s("OutboundLink")],1),e._v(": not really clear the context, probably not going to be solved.")]),e._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/tendermint/spec/issues/371",target:"_blank",rel:"noopener noreferrer"}},[e._v("PBTS: should synchrony parameters be adaptive? #371"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/tendermint/spec/issues/372",target:"_blank",rel:"noopener noreferrer"}},[e._v("PBTS: Treat proposal and block parts explicitly in the spec #372"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/tendermint/spec/issues/377",target:"_blank",rel:"noopener noreferrer"}},[e._v("PBTS: margins for proposal times assigned by Byzantine proposers #377"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"closed-issues"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#closed-issues"}},[e._v("#")]),e._v(" Closed issues")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/tendermint/spec/issues/353",target:"_blank",rel:"noopener noreferrer"}},[e._v("Proposer time - fix message filter condition #353"),s("OutboundLink")],1)]),e._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/tendermint/spec/issues/370",target:"_blank",rel:"noopener noreferrer"}},[e._v("PBTS: association between timely predicate and timeout_commit #370"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=i.exports}}]);